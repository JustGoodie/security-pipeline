name: CI Pipeline with Security Scans

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  issues: write  # Для создания issues
  actions: write  # Для загрузки артефактов

jobs:
  build-and-security:
    runs-on: ubuntu-latest
    steps:
      # Проверяем код из репозитория
      - uses: actions/checkout@v3

      # Отладка: Проверяем файлы репозитория
      - name: Debug repository files
        run: |
          ls -la
          ls -la .zap || echo ".zap directory not found"
          cat .zap/rules.tsv || echo "rules.tsv not found"
          hexdump -C .zap/rules.tsv | head -n 1 || echo "Cannot hexdump rules.tsv"

      # Клонируем Juice Shop
      - name: Clone Juice Shop
        run: |
          git clone https://github.com/juice-shop/juice-shop.git

      # Отладка: Проверяем содержимое директории juice-shop
      - name: Debug Juice Shop contents
        run: |
          ls -la juice-shop
          cat juice-shop/package.json || echo "package.json not found"

      # Настраиваем Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Устанавливаем зависимости Juice Shop
      - name: Install Juice Shop dependencies
        run: |
          cd juice-shop
          npm install --legacy-peer-deps

      # Проверяем уязвимости с помощью npm audit
      - name: Run npm audit
        run: |
          cd juice-shop
          npm audit || echo "npm audit completed with issues"

      # SAST: Запускаем Semgrep
      - name: Run Semgrep
        run: |
          cd juice-shop
          semgrep --config=p/security-audit --json > ../semgrep_output.json || echo "Semgrep scan completed with findings"
          cat ../semgrep_output.json
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}

      # Загружаем отчет Semgrep
      - name: Upload Semgrep Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: semgrep_report
          path: semgrep_output.json
          retention-days: 7

      # Запускаем Juice Shop для DAST
      - name: Start Juice Shop
        run: |
          cd juice-shop
          npm start &
          sleep 10

      # Подготавливаем рабочую директорию для ZAP
      - name: Prepare ZAP work directory
        run: |
          mkdir -p zap_wrk
          chmod -R 777 zap_wrk
          ls -la zap_wrk

      # Копируем правила ZAP
      - name: Copy ZAP rules to work directory
        run: |
          mkdir -p zap_wrk
          if [ -f .zap/rules.tsv ]; then
            cp .zap/rules.tsv zap_wrk/rules.tsv
            echo "Copied .zap/rules.tsv to zap_wrk/rules.tsv"
          else
            echo -e "10017\tIGNORE\t0\n10027\tIGNORE\t0\n10038\tIGNORE\t0\n10049\tIGNORE\t0\n10063\tIGNORE\t0\n10094\tIGNORE\t0\n10096\tIGNORE\t0\n10098\tIGNORE\t0\n10109\tIGNORE\t0\n10110\tIGNORE\t0\n110009\tIGNORE\t0\n90005\tIGNORE\t0" > zap_wrk/rules.tsv
            echo "Created default zap_wrk/rules.tsv"
          fi
          ls -la zap_wrk
          cat zap_wrk/rules.tsv || echo "zap_wrk/rules.tsv not found"
          docker run --rm -v $(pwd)/zap_wrk:/zap/wrk/:rw ictu/zap2docker-weekly:latest bash -c "ls -la /zap/wrk/ && cat /zap/wrk/rules.tsv || echo 'ZAP cannot read rules.tsv'"

      # Отладка: Проверяем разрешения
      - name: Debug workspace permissions
        run: |
          ls -la /home/runner/work/security-pipeline/security-pipeline
          ls -la zap_wrk
          whoami
          touch /home/runner/work/security-pipeline/security-pipeline/test.txt || echo "Cannot write to workspace"

      # Отладка: Проверяем Docker
      - name: Debug Docker pull
        run: |
          docker pull ictu/zap2docker-weekly:latest || echo "Failed to pull Docker image"
          docker images

      # DAST: Запускаем OWASP ZAP
      - name: Run OWASP ZAP
        uses: zaproxy/action-baseline@v0.7.0
        with:
          target: 'http://localhost:3000'
          fail_action: true
          docker_name: 'ictu/zap2docker-weekly:latest'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue_title: 'ZAP Scan Baseline Report'
          allow_issue_writing: true
          rules_file_name: 'zap_wrk/rules.tsv'

      # Загружаем отчеты ZAP
      - name: Upload ZAP Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap_scan
          path: |
            report_json.json
            report_md.md
            report_html.html
          retention-days: 7

      # Отладка: Проверяем отчеты ZAP
      - name: Debug ZAP reports
        if: always()
        run: |
          ls -la /home/runner/work/security-pipeline/security-pipeline
          cat report_md.md || echo "report_md.md not found"
          cat report_html.html || echo "report_html.html not found"
          cat report_json.json || echo "report_json.json not found"

      # Отладка: Показываем npm логи при ошибке
      - name: Show npm logs
        if: failure()
        run: cat /home/runner/.npm/_logs/*.log
